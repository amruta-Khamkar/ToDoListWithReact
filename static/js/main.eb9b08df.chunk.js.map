{"version":3,"sources":["logo.svg","ToDo.jsx","App.js","reportWebVitals.js","index.js"],"names":["ToDo","props","handler1","event","target","name","value","setState","addTask","state","arr","Title","body","id","document","getElementById","alert","deleteTask","index","console","log","window","confirm","splice","updateTask","update","finalUpdate","position","className","onChange","this","cols","rows","onClick","border","map","task","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eb9b08df.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Component } from \"react\";\r\n\r\nimport './ToDo.css';\r\n\r\nclass ToDo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arr: [\r\n                { id: 1, Title: 'JS Batch', body: \"React js\" },\r\n                { id: 2, Title: 'Philomaths', body: \"My Team\" },\r\n            ],\r\n            update:0\r\n\r\n        }\r\n    }\r\n\r\n    handler1 = (event) => {\r\n        let {name,value}=event.target;\r\n        this.setState({[name]:value})\r\n    };\r\n    \r\n    \r\n    addTask = () => {\r\n        let { arr, Title, body ,id} = this.state;\r\n        if(document.getElementById(\"title\").value=='' || document.getElementById(\"desc\").value==''){\r\n            alert(\"Please fill out fields\");\r\n        }\r\n        else{\r\n            this.setState({arr:[...arr,{Title:Title,body:body,id:id+1}]})\r\n        }\r\n    }\r\n\r\n\r\n    deleteTask = (index) => {\r\n        console.log(\"delete\");\r\n        var bool = window.confirm(\"Do You really want to delele this?\")\r\n        if (bool == true) {\r\n            let { arr } = this.state;\r\n            arr.splice(index, 1)\r\n            this.setState({\r\n                arr: arr\r\n            })\r\n            console.log(index);\r\n        }\r\n        else {\r\n            return\r\n        }\r\n    }\r\n\r\n    updateTask = (index) => {\r\n        let { arr ,Title,body,update} = this.state;\r\n       this.setState({update:index})\r\n       console.log(this.state)\r\n       document.getElementById(\"title\").value=arr[index].Title\r\n       document.getElementById(\"desc\").value=arr[index].body\r\n    }\r\n\r\n    finalUpdate=(position)=>{\r\n        if(window.confirm(\"Are sure you want to update this?\")){\r\n            console.log(\"final update\")\r\n            let { arr ,Title,body} = this.state;\r\n            arr[position].Title= document.getElementById(\"title\").value;\r\n            arr[position].body= document.getElementById(\"desc\").value;\r\n            console.log(arr[position].Title)\r\n            this.setState({Title:Title,body:body})\r\n            document.getElementById(\"title\").value=\" \";\r\n            document.getElementById(\"desc\").value=\" \"\r\n        }\r\n    }\r\n    render() {\r\n        return <>\r\n            <div className=\"Container\">\r\n                <h1>To Do List</h1>\r\n                <label> Title: </label><input onChange={this.handler1} name=\"Title\" id=\"title\" cols=\"30\" rows=\"3\" value={this.state.arr.Title}></input><br></br>\r\n                <label className=\"label\">Description :</label> <textarea  onChange={this.handler1} name=\"\" id=\"desc\" name=\"body\" cols=\"30\" rows=\"3\" o></textarea><br></br>\r\n                <div className=\"flex\">\r\n                <button className=\"btn\" onClick={this.addTask}>Add task</button><br></br>\r\n                <button className=\"btn\" onClick={() => this.finalUpdate(this.state.update)}>Final Update</button><br></br>\r\n                </div>\r\n                <div className=\"scroll\">\r\n                <table className=\"table\" border=\"3\">\r\n                    <thead>\r\n                        <th>Sr No</th>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th>Action</th>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {this.state.arr.map((task, index) => {\r\n                           { console.log(task);}\r\n                            return <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{task.Title}</td>\r\n                                <td>{task.body}</td>\r\n                                <td><button className=\"btn1\" onClick={() => this.updateTask(index)}>Update</button><button className=\"btn1\" onClick={() => this.deleteTask(index)}>Delete</button></td>\r\n                            </tr>\r\n\r\n                        })}\r\n                    </tbody>\r\n\r\n                </table>\r\n                </div>\r\n               \r\n            </div>\r\n        </>\r\n    }\r\n\r\n}\r\nexport default ToDo;\r\n\r\n\r\n","import logo from './logo.svg';\nimport ToDo from './ToDo'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDo/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}