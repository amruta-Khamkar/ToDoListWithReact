{"version":3,"sources":["logo.svg","ToDo.jsx","App.js","reportWebVitals.js","index.js"],"names":["ToDo","props","handler","event","target","name","value","setState","add","state","tasks","Title","body","noOfTasks","document","getElementById","alert","length","console","log","delete","index","window","confirm","splice","edit","update","Update","position","className","this","onChange","id","cols","rows","onClick","border","map","task","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6adae750.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Component } from \"react\";\r\n\r\nimport './ToDo.css';\r\n\r\nclass ToDo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks: [\r\n                // { id: 1, Title: 'JS Batch', body: \"React js\" },\r\n                // { id: 2, Title: 'My company', body: \"Neosoft Techonlogies\" },\r\n            ],\r\n            update: 0,\r\n            noOfTasks:1\r\n        }\r\n    }\r\n\r\n    handler = (event) => {\r\n        let { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n   \r\n    add = () => {\r\n        let { tasks, Title, body, noOfTasks} = this.state;\r\n        if (document.getElementById(\"title\").value == '' || document.getElementById(\"desc\").value == ' ') {\r\n            alert(\"Please fill out fields\");\r\n        }\r\n        else {\r\n            this.setState({ tasks: [...tasks, { Title: Title, body: body, }] });\r\n            this.setState({noOfTasks:this.state.tasks.length})\r\n            console.log(this.state.tasks.length)\r\n            document.getElementById(\"title\").value = \" \";\r\n            document.getElementById(\"desc\").value = \" \";\r\n            console.log(this.state)\r\n        }\r\n    }\r\n\r\n\r\n    delete = (index) => {\r\n        console.log(\"delete\");\r\n        let noOfTasks=this.state.noOfTasks;\r\n        var bool = window.confirm(\"Do You really want to delele this?\")\r\n        if (bool == true) {\r\n            let { tasks } = this.state;\r\n            tasks.splice(index, 1)\r\n            this.setState({\r\n                tasks: tasks\r\n            })\r\n            this.setState({noOfTasks:this.state.noOfTasks-1})\r\n            console.log(noOfTasks)\r\n        }\r\n    }\r\n  \r\n    edit = (index) => {\r\n        let { tasks, Title, body, update } = this.state;\r\n        this.setState({ update: index })\r\n        console.log(this.state)\r\n        document.getElementById(\"title\").value = tasks[index].Title\r\n        document.getElementById(\"desc\").value = tasks[index].body\r\n    }\r\n\r\n    Update = (position) => {\r\n        if (document.getElementById(\"title\").value == '' || document.getElementById(\"desc\").value == ' ') {\r\n            alert(\"Please Select the task that you want to update !\");\r\n        }\r\n\r\n        else if (window.confirm(\"Are sure you want to update this?\")) {\r\n            console.log(\"final update\")\r\n            let { tasks, Title, body } = this.state;\r\n            tasks[position].Title = document.getElementById(\"title\").value;\r\n            tasks[position].body = document.getElementById(\"desc\").value;\r\n            console.log(tasks[position].Title)\r\n            this.setState({ Title: Title, body: body })\r\n            document.getElementById(\"title\").value = \" \";\r\n            document.getElementById(\"desc\").value = \" \"\r\n        }\r\n    }\r\n    render() {\r\n        return <>\r\n            <div className=\"Container\">\r\n                <h1>To Do List</h1>\r\n                    <h1 className=\"nums\">No of tasks are :<span className=\"red\">{this.state.noOfTasks+1}</span></h1>\r\n                    \r\n                <label> Title: </label><input onChange={this.handler} name=\"Title\" id=\"title\" cols=\"30\" rows=\"3\"></input><br></br>\r\n                <label className=\"label\">Description :</label> <textarea onChange={this.handler} name=\"\" id=\"desc\" name=\"body\" cols=\"30\" rows=\"3\" o></textarea><br></br>\r\n                <div className=\"flex\">\r\n                    <button className=\"btn\" onClick={this.add}>Add task</button><br></br>\r\n                    <button className=\"btn\" onClick={() => this.Update(this.state.update)}>Final Update</button><br></br>\r\n                </div>\r\n                <div className=\"scroll\">\r\n                    <table className=\"table\" border=\"3\">\r\n                        <thead>\r\n                            <th>Sr No</th>\r\n                            <th>Title</th>\r\n                            <th>Description</th>\r\n                            <th>Action</th>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {this.state.tasks.map((task, index) => {\r\n                                return <tr key={index}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{task.Title}</td>\r\n                                    <td>{task.body}</td>\r\n                                    <td><button className=\"btn1\" onClick={() => this.edit(index)}>Edit</button><button className=\"btn2\" onClick={() => this.delete(index)}>Delete</button></td>\r\n                                </tr>\r\n\r\n                            })}\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    }\r\n\r\n}\r\nexport default ToDo;\r\n\r\n\r\n","import logo from './logo.svg';\nimport ToDo from './ToDo'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDo/>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}